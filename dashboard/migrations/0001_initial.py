# Generated by Django 4.2.10 on 2025-05-10 08:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("courses", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="texte")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="date de mise à jour"
                    ),
                ),
                (
                    "content",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_notes",
                        to="courses.content",
                        verbose_name="contenu",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="étudiant",
                    ),
                ),
            ],
            options={
                "verbose_name": "note",
                "verbose_name_plural": "notes",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="CourseProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="date de début"
                    ),
                ),
                (
                    "last_accessed",
                    models.DateTimeField(auto_now=True, verbose_name="dernier accès"),
                ),
                (
                    "completed",
                    models.BooleanField(default=False, verbose_name="terminé"),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="date de fin"
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_progresses",
                        to="courses.course",
                        verbose_name="cours",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_progresses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="étudiant",
                    ),
                ),
            ],
            options={
                "verbose_name": "progression de cours",
                "verbose_name_plural": "progressions de cours",
                "unique_together": {("student", "course")},
            },
        ),
        migrations.CreateModel(
            name="ActivityLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("login", "Connexion"),
                            ("logout", "Déconnexion"),
                            ("view_course", "Consultation de cours"),
                            ("enroll_course", "Inscription à un cours"),
                            ("complete_content", "Contenu terminé"),
                            ("submit_assignment", "Soumission de devoir"),
                        ],
                        max_length=50,
                        verbose_name="type d'activité",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="horodatage"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="adresse IP"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="user agent")),
                (
                    "content",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="activity_logs",
                        to="courses.content",
                        verbose_name="contenu",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="activity_logs",
                        to="courses.course",
                        verbose_name="cours",
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="activity_logs",
                        to="courses.module",
                        verbose_name="module",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activity_logs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "journal d'activité",
                "verbose_name_plural": "journaux d'activité",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="CourseReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")],
                        verbose_name="note",
                    ),
                ),
                ("comment", models.TextField(verbose_name="commentaire")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="date de mise à jour"
                    ),
                ),
                (
                    "is_approved",
                    models.BooleanField(default=True, verbose_name="approuvé"),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="courses.course",
                        verbose_name="cours",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_reviews",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="étudiant",
                    ),
                ),
            ],
            options={
                "verbose_name": "avis sur un cours",
                "verbose_name_plural": "avis sur les cours",
                "ordering": ["-created_at"],
                "unique_together": {("student", "course")},
            },
        ),
        migrations.CreateModel(
            name="ContentProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="date de début"
                    ),
                ),
                (
                    "last_accessed",
                    models.DateTimeField(auto_now=True, verbose_name="dernier accès"),
                ),
                (
                    "completed",
                    models.BooleanField(default=False, verbose_name="terminé"),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="date de fin"
                    ),
                ),
                (
                    "time_spent",
                    models.PositiveIntegerField(
                        default=0, verbose_name="temps passé (minutes)"
                    ),
                ),
                (
                    "content",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_progresses",
                        to="courses.content",
                        verbose_name="contenu",
                    ),
                ),
                (
                    "course_progress",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_progresses",
                        to="dashboard.courseprogress",
                        verbose_name="progression du cours",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_progresses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="étudiant",
                    ),
                ),
            ],
            options={
                "verbose_name": "progression de contenu",
                "verbose_name_plural": "progressions de contenu",
                "unique_together": {("student", "content")},
            },
        ),
    ]
